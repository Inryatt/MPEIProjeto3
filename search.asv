function search(ns, k, moviesCell, moviesId)
    % a minHash é suposta ser feita como a outra, porém cada coluna são
    % moviesId (ao invés dos users) e eles contém todos os shingles (ao
    % invés dos moviesId)
    moviesName = moviesCell(:,1);
    % conjunto de cells, com cada título do movie
    
    minHash = zeros(k,length(moviesId));
    
    % minHash vai ser uma matriz em que as linhas representam uma hash
    % function e as colunas representam cada movie
    
    name = input("Write a string: ", 's');
    name_shingles = getShingles(name,ns);
    
    movie = moviesName{1};
    [sh,count] = 
    
    %for m=1:length(moviesId)
        
    %end
    
    
    
%%    Maneira de se fazer não utilizando minHashs
%     C1 = unique(strsplit(lower(name)));
%     distancias = zeros(1, size(movies,1));
%     for i=1:size(movies,1)
%         filme = movies{i,1};
%         C2 = unique(strsplit(lower(filme)));
%         distancias(i) = 1 - (length(intersect(C1,C2))/length(union(C1,C2)));
%         % distancia de Jaccard
%     end
%     [mi,index] = mink(distancias,5); 
%     % as 5 menores distancias e seus indices
%     for i = 1:5
%         if mi(i) > 0.99 % não mostrar se a distancia for > 0.99
%             if i == 1
%                 disp("We don't have nothing like that :(");
%             end
%             break
%         end
%         fprintf(distancias(index(i)) + " | " + movies{index(i),1} + "\n");
%     end
end

